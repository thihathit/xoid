(window.webpackJsonp=window.webpackJsonp||[]).push([[26,7,14],{104:function(e,t,n){"use strict";var a=n(0),o=n.n(a),r=n(114),c=n(101),l=function(){var e=Object(c.useLocation)().pathname;return e.endsWith("/")?o.a.createElement(c.Redirect,{to:e.slice(0,-1)}):e.endsWith(".html")?o.a.createElement(c.Redirect,{to:e.slice(0,-5)}):null};t.a=function(e){return o.a.createElement(o.a.Fragment,null,o.a.createElement(l,null),o.a.createElement(r.a,e))}},84:function(e,t,n){"use strict";n.r(t);var a=n(0),o=n.n(a),r=n(104),c=n(122),l=(n(168),n(106)),s=n(105),i=n(170),m=n.n(i),u=[{text:"### Simple primitives\n**xoid** is based on *atoms*. Atoms are standalone setter/getter objects that hold state. `create` function is used to create them.\n\nIt has a **Recoil**-inspired API for derived atoms. \n\n  ",code:"import { create } from 'xoid'\n\nconst atom = create(3)\natom() // 3 (get the value)\natom(5) // void (set the value to 5)\natom((state) => state + 1) // void (also set the value)\natom() // 6\n\nconst derivedAtom = create(get => get(atom) * 2)\n"},{text:"### Actions\n\nWith the second argument, you can specify actions for your atoms. `use` function is used to grab these actions.\n\n",code:"import { create, use } from 'xoid'\n\nconst counterAtom = create(3, (atom) => ({\n  increment: () => atom((s) => s + 1),\n  incrementBy: (by) => atom((s) => s + by)\n}))\n\nuse(counterAtom).incrementBy(5)\nsetInterval(use(counterAtom).increment, 1000)\n"},{text:"\n### React integration\n\n**xoid** has a minimal React integration. \nNo need for wrapping components into context providers. \nJust import `useAtom` and start using!\n\n",code:"import { create, subscribe, use } from 'xoid'\nimport { useAtom } from '@xoid/react'\n\n// in a React component\nconst count = useAtom(counterAtom)\nconst { increment } = use(counterAtom)\n\n// outside React\nconst unsubscribe = subscribe(alpha, console.log)\n"},{text:'\n### No more hand-written reducers!\n\n`use` function, when used with a second argument, acts as a selector. \nThe selected node will be a subscribable getter/setter object like any other atom. \nxoid is based on immutable updates, so if you "surgically" set state of a selected branch, changes will propagate to the root.\n\n\n\n',code:"import { create, use } from 'xoid'\n\nconst atom = create({ deeply: { nested: { foo: 5 } } })\nconst fooAtom = use(atom, (s) => s.deeply.nested.foo)\n\nconst oldValue = atom()\nfooAtom(25) // set the value surgically into the store\nconst newValue = atom()\n\nconsole.log(newValue) // { deeply: { nested: { foo: 25 } } }\nassert(oldValue !== newValue) // \u2705\n"},{text:"\n### No-API Finite State Machines!\nNo additional syntax is required to define and use finite state machines. Just use the second argument of the callback as the state transition function.\n\n",code:"import { create } from 'xoid'\n\nconst red = { color: '#f00', onClick: () => machine(green) }\nconst green = { color: '#0f0', onClick: () => machine(red) }\nconst machine = create(red)\n\n// in a React component\nconst { color, onClick } = useAtom(machine)\nreturn <div style={{ color }} onClick={onClick}/>\n"}];function d(e){var t=e.href,n=e.type,a=void 0===n?"primary":n,r=e.target,c=e.children;return o.a.createElement("a",{className:"ActionButton "+a,href:t,target:r},c)}function f(e){e.title;var t=e.text,n=e.moreContent;return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{dangerouslySetInnerHTML:{__html:t}}),n)}function h(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(d,{type:"primary",href:Object(s.a)("docs/getting-started"),target:"_self"},"Get started"),o.a.createElement(d,{type:"secondary",href:Object(s.a)("docs/examples"),target:"_self"},"Examples"))}function p(e){var t=e.element,n=void 0===t?"section":t,a=e.children,r=e.className,c=e.background,l=void 0===c?"light":c,s=e.style,i=n;return o.a.createElement(i,{className:"Section "+r+" "+l,style:s},a)}function g(e){var t=e.columnOne,n=e.columnTwo,a=e.reverse;return o.a.createElement("div",{className:"TwoColumns "+(a?"reverse":"")},o.a.createElement("div",{className:"column first "+(a?"right":"left")},t),o.a.createElement("div",{className:"column last "+(a?"left":"right")},n))}function E(){return o.a.createElement(p,{background:"none",className:"HeaderHero",style:{paddingTop:110}},o.a.createElement("div",{className:"titleContainer"},o.a.createElement("div",{className:"title"},o.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"45 45 48 48",width:250,height:250},o.a.createElement("mask",{id:"a"},o.a.createElement("path",{fill:"#fff",d:"M55.367 45.864H109.238V94.627H55.367z"}),o.a.createElement("path",{d:"M73.37 51.3l28.061 28.381-9.521 9.317-28.112-28.335L73.37 51.3z"}),o.a.createElement("path",{d:"M70.704 51.213l30.48 29.784-9.485 9.454-30.182-29.732 9.187-9.506z",transform:"rotate(90 81.289 70.865)"})),o.a.createElement("g",{mask:"url(#a)",transform:"translate(-13.353 -1.066)",stroke:"#cc9fff",strokeWidth:"2px",fill:"transparent"},o.a.createElement("ellipse",{cx:82.318,cy:69.699,rx:22.576,ry:5.02}),o.a.createElement("ellipse",{cx:82.318,cy:69.699,rx:22.576,ry:5.02,transform:"rotate(-90 82.396 69.965)"})),o.a.createElement("path",{d:"M84.654 76.539l-7.75-7.799 6.586-6.646a3.28 3.28 0 00-.006-4.609l-3.391-3.413a3.208 3.208 0 00-2.289-.952c-.865 0-1.677.338-2.286.952l-6.586 6.647-7.75-7.799a1.611 1.611 0 00-2.287 0l-5.665 5.717a1.638 1.638 0 00.003 2.305l7.75 7.798-7.728 7.799c-.303.306-.473.72-.472 1.153l.008 5.716c.001.901.726 1.63 1.619 1.63h5.674c.429 0 .84-.171 1.143-.477l7.728-7.799 7.75 7.799a1.61 1.61 0 002.287 0l5.665-5.717a1.633 1.633 0 00-.003-2.305zm-7.99-21.314a1.609 1.609 0 012.287 0l3.391 3.412c.63.634.632 1.671.003 2.305l-1.107 1.117-5.681-5.717 1.107-1.117zm-.051 4.482l1.285 1.292-19.047 19.22-1.284-1.292 19.046-19.22zm-22.238.082l5.666-5.717.838.844-1.823 1.84a.818.818 0 00.001 1.152.8.8 0 001.144 0l1.824-1.84 1.284 1.293-1.016 1.025a.818.818 0 00.574 1.391c.207 0 .414-.08.572-.239l1.016-1.025 1.284 1.292-1.823 1.84a.82.82 0 00.001 1.153.806.806 0 001.144 0l1.824-1.84.907.913-5.667 5.717-7.75-7.799zm20.04-2.295l1.053 1.06-19.046 19.22-1.053-1.06 19.046-19.22zM54.408 83.408l-.007-5.366 5.333 5.366h-5.326zm6.642-.977l-1.054-1.06 19.047-19.22 1.053 1.06-19.046 19.22zm16.797.977l-7.75-7.798 5.665-5.717.908.913-1.823 1.84a.81.81 0 00-.236.576c0 .209.079.418.237.577a.805.805 0 001.144 0l1.823-1.84 1.284 1.292-1.015 1.025a.81.81 0 00-.236.577c0 .208.079.417.237.576a.805.805 0 001.144 0l1.016-1.025 1.284 1.292-1.824 1.84a.816.816 0 00-.235.577c0 .208.079.417.237.576a.803.803 0 001.144 0l1.823-1.84.838.842-5.665 5.717z",fill:"currentColor"}))),o.a.createElement("p",{className:"tagline"},"Scalable, fine-grained, and minimal state-management library for React and vanilla JavaScript"),o.a.createElement("div",{className:"buttons"},o.a.createElement(h,null))))}function v(e){return o.a.createElement(p,{className:"NativeCode",background:e.tint?"tint":"light"},o.a.createElement(g,{columnOne:o.a.createElement(f,{text:m()(e.content.text)}),columnTwo:o.a.createElement(c.a,{language:"jsx"},e.content.code)}))}t.default=function(){return o.a.createElement(r.a,{wrapperClassName:"homepage"},o.a.createElement(l.a,null,o.a.createElement("title",null,"xoid \xb7 Documentation")),o.a.createElement(E,null),u.map((function(e,t){return o.a.createElement(v,{content:e,tint:!(t%2)})})))}}}]);