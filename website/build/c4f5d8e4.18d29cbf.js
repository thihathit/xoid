(window.webpackJsonp=window.webpackJsonp||[]).push([[24,6,13],{101:function(e,t,n){"use strict";var a=n(0),o=n.n(a),r=n(109),c=n(98),s=function(){var e=Object(c.useLocation)().pathname;return e.endsWith("/")?o.a.createElement(c.Redirect,{to:e.slice(0,-1)}):e.endsWith(".html")?o.a.createElement(c.Redirect,{to:e.slice(0,-5)}):null};t.a=function(e){return o.a.createElement(o.a.Fragment,null,o.a.createElement(s,null),o.a.createElement(r.a,e))}},82:function(e,t,n){"use strict";n.r(t);var a=n(0),o=n.n(a),r=n(101),c=n(117),s=(n(165),n(103)),i=n(102),l=n(167),m=n.n(l),u=[{text:"### Simple primitives\n**xoid** is based on *atoms*. Atoms are standalone setter/getter objects that hold state. `create` function is used to create them.\n\nIt has a **Recoil**-inspired API for derived atoms. \n\n  ",code:"import { create } from 'xoid'\n\nconst atom = create(3)\natom() // 3 (get the value)\natom(5) // void (set the value to 5)\natom((state) => state + 1) // void (also set the value)\natom() // 6\n\nconst derivedAtom = create(get => get(atom) * 2)\n"},{text:"### Actions\n\nWith the second argument, you can specify actions for your atoms. `use` function is used to grab these actions.\n\n",code:"import { create, use } from 'xoid'\n\nconst counterAtom = create(3, (atom) => ({\n  increment: () => atom((s) => s + 1),\n  incrementBy: (by) => atom((s) => s + by)\n}))\n\nuse(counterAtom).incrementBy(5)\nsetInterval(use(counterAtom).increment, 1000)\n"},{text:"\n### React integration\n\n**xoid** has a minimal React integration. \nNo need for wrapping components into context providers. \nJust import `useAtom` and start using!\n\n",code:"import { create, subscribe, use } from 'xoid'\nimport { useAtom } from '@xoid/react'\n\n// in a React component\nconst count = useAtom(counterAtom)\nconst { increment } = use(counterAtom)\n\n// outside React\nconst unsubscribe = subscribe(alpha, console.log)\n"},{text:'\n### No more hand-written reducers!\n\n**xoid** is based on immutable updates.\nYou can "surgically" modify a subtree of the state by using `select` function, and changes will propagate to the root.\n\n',code:"import { create, select } from 'xoid'\n\nconst atom = create({ deeply: { nested: { foo: 5 } } })\nconst fooAtom = select(atom, (s) => s.deeply.nested.foo)\n\nconst oldValue = atom()\nfooAtom(25) // set the value surgically into the store\nconst newValue = atom()\n\nconsole.log(newValue) // { deeply: { nested: { foo: 25 } } }\nassert(oldValue !== newValue) // \u2705\n"},{text:"\n### No-API Finite State Machines!\nNo additional syntax is required to define and use finite state machines. Just use the second argument of the callback as the state transition function.\n\n",code:"import { create } from 'xoid'\n\nconst red = { color: '#f00', onClick: () => machine(green) }\nconst green = { color: '#0f0', onClick: () => machine(red) }\nconst machine = create(red)\n\n// in a React component\nconst { color, onClick } = useAtom(machine)\nreturn <div style={{ color }} onClick={onClick}/>\n"}];function d(e){var t=e.href,n=e.type,a=void 0===n?"primary":n,r=e.target,c=e.children;return o.a.createElement("a",{className:"ActionButton "+a,href:t,target:r},c)}function f(e){e.title;var t=e.text,n=e.moreContent;return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{dangerouslySetInnerHTML:{__html:t}}),n)}function g(){return o.a.createElement(o.a.Fragment,null,o.a.createElement(d,{type:"primary",href:Object(i.a)("docs/getting-started"),target:"_self"},"Get started"),o.a.createElement(d,{type:"secondary",href:Object(i.a)("docs/examples"),target:"_self"},"Examples"))}function p(e){var t=e.element,n=void 0===t?"section":t,a=e.children,r=e.className,c=e.background,s=void 0===c?"light":c,i=e.style,l=n;return o.a.createElement(l,{className:"Section "+r+" "+s,style:i},a)}function h(e){var t=e.columnOne,n=e.columnTwo,a=e.reverse;return o.a.createElement("div",{className:"TwoColumns "+(a?"reverse":"")},o.a.createElement("div",{className:"column first "+(a?"right":"left")},t),o.a.createElement("div",{className:"column last "+(a?"left":"right")},n))}function v(){return o.a.createElement(p,{background:"none",className:"HeaderHero",style:{paddingTop:120}},o.a.createElement("div",{className:"titleContainer"},o.a.createElement("div",{className:"title"},o.a.createElement("img",{alt:"xoid",src:Object(i.a)("img/logo.svg"),height:"300px",style:{margin:"auto",boxShadow:"0px 2px 9px -3px #0000002e"}})),o.a.createElement("p",{className:"tagline"},"Scalable, fine-grained, and minimal state-management library for React and vanilla JavaScript"),o.a.createElement("div",{className:"buttons"},o.a.createElement(g,null))))}function E(e){return o.a.createElement(p,{className:"NativeCode",background:e.tint?"tint":"light"},o.a.createElement(h,{columnOne:o.a.createElement(f,{text:m()(e.content.text)}),columnTwo:o.a.createElement(c.a,{language:"jsx"},e.content.code)}))}t.default=function(){return o.a.createElement(r.a,{wrapperClassName:"homepage"},o.a.createElement(s.a,null,o.a.createElement("title",null,"xoid \xb7 Scalable state-management library for React and vanilla")),o.a.createElement(v,null),u.map((function(e,t){return o.a.createElement(E,{content:e,tint:!(t%2)})})))}}}]);